<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mq.music.mapper.SingerMapper">
    <resultMap id="BaseResultMap" type="com.mq.music.bean.Singer">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="picture" jdbcType="VARCHAR" property="picture"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="introduce" jdbcType="VARCHAR" property="introduce"/>
        <result column="singer_type" jdbcType="VARCHAR" property="singerType"/>

    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, name, picture, sex, singer_type
    </sql>
    <select id="queryList" resultMap="BaseResultMap">
        select * from t_singer
        <where>
            <if test="queryText!=null">name like concat("%",#{queryText},"%")
                or sex like concat("%",#{queryText},"%")
                or introduce like concat("%",#{queryText},"%")

            </if>
        </where>
        order by id

        limit #{startIndex},#{pagesize}
    </select>
    <select id="queryCount" resultType="int">
        select count(*) from t_singer
        <where>
            <if test="queryText!=null">name like concat("%",#{queryText},"%")</if>
        </where>
    </select>
    <select id="selectByExample" parameterType="com.mq.music.bean.SingerExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_singer
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_singer
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_singer
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.mq.music.bean.SingerExample">
        delete from t_singer
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.mq.music.bean.Singer">
        insert into t_singer ( name, picture,
        sex, introduce,singer_type
        )
        values ( #{name,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR},
        #{sex,jdbcType=VARCHAR},#{introduce,jdbcType=VARCHAR}, #{singerType,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.mq.music.bean.Singer">
        insert into t_singer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="picture != null">
                picture,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="singerType != null">
                singer_type,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="picture != null">
                #{picture,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="introduce != null">
                #{introduce,jdbcType=VARCHAR},
            </if>
            <if test="singerType != null">
                #{singerType,jdbcType=VARCHAR},
            </if>

        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mq.music.bean.SingerExample" resultType="java.lang.Long">
        select count(*) from t_singer
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_singer
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.picture != null">
                picture = #{record.picture,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=VARCHAR},
            </if>
            <if test="record.introduce != null">
                sex = #{record.introduce,jdbcType=VARCHAR},
            </if>
            <if test="record.singerType != null">
                singer_type = #{record.singerType,jdbcType=VARCHAR},
            </if>

        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_singer
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        picture = #{record.picture,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=VARCHAR},
        introduce = #{record.introduce,jdbcType=VARCHAR},
        singer_type = #{record.singerType,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.mq.music.bean.Singer">
        update t_singer
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="picture != null">
                picture = #{picture,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="introduce != null">
                sex = #{introduce,jdbcType=VARCHAR},
            </if>
            <if test="singerType != null">
                singer_type = #{singerType,jdbcType=VARCHAR},
            </if>

        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mq.music.bean.Singer">
        update t_singer
        set name = #{name,jdbcType=VARCHAR},
        picture = #{picture,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=VARCHAR},
        introduce = #{introduce,jdbcType=VARCHAR},
        singer_type = #{singerType,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteBachSinger">

        delete from t_singer
        where id in
        <foreach collection="datasSinger" open="(" close=")" separator="," item="singer">
            #{singer.id}
        </foreach>
    </delete>


    <select id="getSingerPictureByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_singer
        where name = #{name,jdbcType=VARCHAR}
    </select>
</mapper>