<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mq.music.mapper.SongMapper">
  <resultMap id="BaseResultMap" type="com.mq.music.bean.Song">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="singer" jdbcType="VARCHAR" property="singer" />
    <result column="clickNum" jdbcType="INTEGER" property="clicknum" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="createtime" jdbcType="CHAR" property="createtime" />
    <result column="songType" jdbcType="VARCHAR" property="songtype" />
    <result column="album" jdbcType="VARCHAR" property="album" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, singer, clickNum, url, createtime, songType, album, pic
  </sql>
  <select id="selectByExample" parameterType="com.mq.music.bean.SongExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_song
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_song
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mq.music.bean.SongExample">
    delete from t_song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mq.music.bean.Song">
    insert into t_song (id, name, singer, 
      clickNum, url, createtime, 
      songType, album, pic
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{singer,jdbcType=VARCHAR}, 
      #{clicknum,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{createtime,jdbcType=CHAR}, 
      #{songtype,jdbcType=VARCHAR}, #{album,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mq.music.bean.Song">
    insert into t_song
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="singer != null">
        singer,
      </if>
      <if test="clicknum != null">
        clickNum,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="songtype != null">
        songType,
      </if>
      <if test="album != null">
        album,
      </if>
      <if test="pic != null">
        pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="singer != null">
        #{singer,jdbcType=VARCHAR},
      </if>
      <if test="clicknum != null">
        #{clicknum,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=CHAR},
      </if>
      <if test="songtype != null">
        #{songtype,jdbcType=VARCHAR},
      </if>
      <if test="album != null">
        #{album,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mq.music.bean.SongExample" resultType="java.lang.Long">
    select count(*) from t_song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_song
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.singer != null">
        singer = #{record.singer,jdbcType=VARCHAR},
      </if>
      <if test="record.clicknum != null">
        clickNum = #{record.clicknum,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=CHAR},
      </if>
      <if test="record.songtype != null">
        songType = #{record.songtype,jdbcType=VARCHAR},
      </if>
      <if test="record.album != null">
        album = #{record.album,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_song
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      singer = #{record.singer,jdbcType=VARCHAR},
      clickNum = #{record.clicknum,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=CHAR},
      songType = #{record.songtype,jdbcType=VARCHAR},
      album = #{record.album,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mq.music.bean.Song">
    update t_song
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="singer != null">
        singer = #{singer,jdbcType=VARCHAR},
      </if>
      <if test="clicknum != null">
        clickNum = #{clicknum,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=CHAR},
      </if>
      <if test="songtype != null">
        songType = #{songtype,jdbcType=VARCHAR},
      </if>
      <if test="album != null">
        album = #{album,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mq.music.bean.Song">
    update t_song
    set name = #{name,jdbcType=VARCHAR},
      singer = #{singer,jdbcType=VARCHAR},
      clickNum = #{clicknum,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=CHAR},
      songType = #{songtype,jdbcType=VARCHAR},
      album = #{album,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
    <select id="queryList" resultMap="BaseResultMap">
    select * from t_song
    <where>
        <if test="queryText!=null">name like concat("%",#{queryText},"%")
            or singer like concat("%",#{queryText},"%")
            or songType like concat("%",#{queryText},"%")
            or album like concat("%",#{queryText},"%")
        </if>
    </where>
    order by createtime DESC

    limit #{startIndex},#{pagesize}
</select>

    <select id="queryCount" resultType="int">
        select count(*) from t_song
        <where>
            <if test="queryText!=null">name like concat("%",#{queryText},"%")
                or singer like concat("%",#{queryText},"%")
                or songType like concat("%",#{queryText},"%")
                or album like concat("%",#{queryText},"%")
            </if>
        </where>
    </select>

    <select id="queryHotMusicList" resultMap="BaseResultMap">
        select * from t_song

        order by clickNum DESC

        limit #{startIndex},#{pagesize}
    </select>

    <select id="queryHotMusicCount" resultType="int">
        select count(*) from t_song

    </select>

    <select id="queryNewMusicList" resultMap="BaseResultMap">
        select * from t_song

        order by createtime DESC

        limit #{startIndex},#{pagesize}
    </select>

    <select id="queryNewMusicCount" resultType="int">
        select count(*) from t_song

    </select>


    <select id="queryOriginalMusicList" resultMap="BaseResultMap">
        select * from t_song
        WHERE songType="原创"
        order by clickNum DESC

        limit #{startIndex},#{pagesize}
    </select>

    <select id="queryOriginalMusicCount" resultType="int">
        select count(*) from t_song

    </select>



    <delete id="deleteBachMusic">

        delete  from t_song
        where id in
        <foreach collection="datasMusic" open="(" close=")" separator="," item="song">
            #{song.id}
        </foreach>
    </delete>


  <select id="queryAllMusicList" resultMap="BaseResultMap">
    select * from t_song
    where singer  = #{singer}
    order by createtime DESC

    limit #{startIndex},#{pagesize}
  </select>



  <select id="queryCountAllMusic" resultType="int">
    select count(*) from t_song
    where singer = #{singer}
  </select>
</mapper>